["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/babel-polyfill/node_modules/core-js/modules/_collection-strong.js"],"~:js","shadow$provide.module$node_modules$babel_polyfill$node_modules$core_js$modules$_collection_strong=function(global,require,module,exports){var dP=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_object_dp\").f,create=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_object_create\"),redefineAll=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_redefine_all\"),ctx=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_ctx\"),\nanInstance=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_an_instance\"),forOf=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_for_of\"),$iterDefine=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_iter_define\"),step=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_iter_step\"),setSpecies=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_set_species\"),DESCRIPTORS=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_descriptors\"),\nfastKey=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_meta\").fastKey,validate=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_validate_collection\"),SIZE=DESCRIPTORS?\"_s\":\"size\",getEntry=function(that,key){var index=fastKey(key);if(\"F\"!==index)return that._i[index];for(that=that._f;that;that=that.n)if(that.k==key)return that};module.exports={getConstructor:function(wrapper,NAME,IS_MAP,ADDER){var C=wrapper(function(that,iterable){anInstance(that,\nC,NAME,\"_i\");that._t=NAME;that._i=create(null);that._f=void 0;that._l=void 0;that[SIZE]=0;void 0!=iterable&&forOf(iterable,IS_MAP,that[ADDER],that)});redefineAll(C.prototype,{clear:function(){for(var that=validate(this,NAME),data=that._i,entry=that._f;entry;entry=entry.n)entry.r=!0,entry.p&&(entry.p=entry.p.n=void 0),delete data[entry.i];that._f=that._l=void 0;that[SIZE]=0},\"delete\":function(key){var that=validate(this,NAME);if(key=getEntry(that,key)){var next=key.n,prev=key.p;delete that._i[key.i];\nkey.r=!0;prev&&(prev.n=next);next&&(next.p=prev);that._f==key&&(that._f=next);that._l==key&&(that._l=prev);that[SIZE]--}return!!key},forEach:function(callbackfn){validate(this,NAME);for(var f=ctx(callbackfn,1<arguments.length?arguments[1]:void 0,3),entry;entry=entry?entry.n:this._f;)for(f(entry.v,entry.k,this);entry&&entry.r;)entry=entry.p},has:function(key){return!!getEntry(validate(this,NAME),key)}});DESCRIPTORS&&dP(C.prototype,\"size\",{get:function(){return validate(this,NAME)[SIZE]}});return C},\ndef:function(that,key,value){var entry=getEntry(that,key),prev,index;entry?entry.v=value:(that._l=entry={i:index=fastKey(key,!0),k:key,v:value,p:prev=that._l,n:void 0,r:!1},that._f||(that._f=entry),prev&&(prev.n=entry),that[SIZE]++,\"F\"!==index&&(that._i[index]=entry));return that},getEntry,setStrong:function(C,NAME,IS_MAP){$iterDefine(C,NAME,function(iterated,kind){this._t=validate(iterated,NAME);this._k=kind;this._l=void 0},function(){for(var kind=this._k,entry=this._l;entry&&entry.r;)entry=entry.p;\nreturn this._t&&(this._l=entry=entry?entry.n:this._t._f)?\"keys\"==kind?step(0,entry.k):\"values\"==kind?step(0,entry.v):step(0,[entry.k,entry.v]):(this._t=void 0,step(1))},IS_MAP?\"entries\":\"values\",!IS_MAP,!0);setSpecies(NAME)}}}","~:source","shadow$provide[\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_collection_strong\"] = function(global,require,module,exports) {\n'use strict';\nvar dP = require('./_object-dp').f;\nvar create = require('./_object-create');\nvar redefineAll = require('./_redefine-all');\nvar ctx = require('./_ctx');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar $iterDefine = require('./_iter-define');\nvar step = require('./_iter-step');\nvar setSpecies = require('./_set-species');\nvar DESCRIPTORS = require('./_descriptors');\nvar fastKey = require('./_meta').fastKey;\nvar validate = require('./_validate-collection');\nvar SIZE = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function (that, key) {\n  // fast case\n  var index = fastKey(key);\n  var entry;\n  if (index !== 'F') return that._i[index];\n  // frozen object case\n  for (entry = that._f; entry; entry = entry.n) {\n    if (entry.k == key) return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;         // collection type\n      that._i = create(null); // index\n      that._f = undefined;    // first entry\n      that._l = undefined;    // last entry\n      that[SIZE] = 0;         // size\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {\n          entry.r = true;\n          if (entry.p) entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function (key) {\n        var that = validate(this, NAME);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.n;\n          var prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if (prev) prev.n = next;\n          if (next) next.p = prev;\n          if (that._f == entry) that._f = next;\n          if (that._l == entry) that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        validate(this, NAME);\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.n : this._f) {\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while (entry && entry.r) entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(validate(this, NAME), key);\n      }\n    });\n    if (DESCRIPTORS) dP(C.prototype, 'size', {\n      get: function () {\n        return validate(this, NAME)[SIZE];\n      }\n    });\n    return C;\n  },\n  def: function (that, key, value) {\n    var entry = getEntry(that, key);\n    var prev, index;\n    // change existing entry\n    if (entry) {\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if (!that._f) that._f = entry;\n      if (prev) prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if (index !== 'F') that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function (C, NAME, IS_MAP) {\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function (iterated, kind) {\n      this._t = validate(iterated, NAME); // target\n      this._k = kind;                     // kind\n      this._l = undefined;                // previous\n    }, function () {\n      var that = this;\n      var kind = that._k;\n      var entry = that._l;\n      // revert to the last existing entry\n      while (entry && entry.r) entry = entry.p;\n      // get next entry\n      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if (kind == 'keys') return step(0, entry.k);\n      if (kind == 'values') return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_set_species","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_object_create","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_iter_step","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_meta","~$shadow.js","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_object_dp","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_for_of","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_redefine_all","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_ctx","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_an_instance","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_iter_define","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_descriptors","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_validate_collection"]],"~:properties",["^5",["_k","n","_i","forEach","getEntry","p","v","_t","setStrong","getConstructor","_l","i","k","r","has","def","_f","clear","get"]],"~:compiled-at",1666267695850,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_collection_strong.js\",\n\"lineCount\":7,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/babel-polyfill/node_modules/core-js/modules/_collection-strong.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_collection_strong\\\"] = function(global,require,module,exports) {\\n'use strict';\\nvar dP = require('./_object-dp').f;\\nvar create = require('./_object-create');\\nvar redefineAll = require('./_redefine-all');\\nvar ctx = require('./_ctx');\\nvar anInstance = require('./_an-instance');\\nvar forOf = require('./_for-of');\\nvar $iterDefine = require('./_iter-define');\\nvar step = require('./_iter-step');\\nvar setSpecies = require('./_set-species');\\nvar DESCRIPTORS = require('./_descriptors');\\nvar fastKey = require('./_meta').fastKey;\\nvar validate = require('./_validate-collection');\\nvar SIZE = DESCRIPTORS ? '_s' : 'size';\\n\\nvar getEntry = function (that, key) {\\n  // fast case\\n  var index = fastKey(key);\\n  var entry;\\n  if (index !== 'F') return that._i[index];\\n  // frozen object case\\n  for (entry = that._f; entry; entry = entry.n) {\\n    if (entry.k == key) return entry;\\n  }\\n};\\n\\nmodule.exports = {\\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\\n    var C = wrapper(function (that, iterable) {\\n      anInstance(that, C, NAME, '_i');\\n      that._t = NAME;         // collection type\\n      that._i = create(null); // index\\n      that._f = undefined;    // first entry\\n      that._l = undefined;    // last entry\\n      that[SIZE] = 0;         // size\\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\\n    });\\n    redefineAll(C.prototype, {\\n      // 23.1.3.1 Map.prototype.clear()\\n      // 23.2.3.2 Set.prototype.clear()\\n      clear: function clear() {\\n        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {\\n          entry.r = true;\\n          if (entry.p) entry.p = entry.p.n = undefined;\\n          delete data[entry.i];\\n        }\\n        that._f = that._l = undefined;\\n        that[SIZE] = 0;\\n      },\\n      // 23.1.3.3 Map.prototype.delete(key)\\n      // 23.2.3.4 Set.prototype.delete(value)\\n      'delete': function (key) {\\n        var that = validate(this, NAME);\\n        var entry = getEntry(that, key);\\n        if (entry) {\\n          var next = entry.n;\\n          var prev = entry.p;\\n          delete that._i[entry.i];\\n          entry.r = true;\\n          if (prev) prev.n = next;\\n          if (next) next.p = prev;\\n          if (that._f == entry) that._f = next;\\n          if (that._l == entry) that._l = prev;\\n          that[SIZE]--;\\n        } return !!entry;\\n      },\\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\\n      forEach: function forEach(callbackfn /* , that = undefined */) {\\n        validate(this, NAME);\\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\\n        var entry;\\n        while (entry = entry ? entry.n : this._f) {\\n          f(entry.v, entry.k, this);\\n          // revert to the last existing entry\\n          while (entry && entry.r) entry = entry.p;\\n        }\\n      },\\n      // 23.1.3.7 Map.prototype.has(key)\\n      // 23.2.3.7 Set.prototype.has(value)\\n      has: function has(key) {\\n        return !!getEntry(validate(this, NAME), key);\\n      }\\n    });\\n    if (DESCRIPTORS) dP(C.prototype, 'size', {\\n      get: function () {\\n        return validate(this, NAME)[SIZE];\\n      }\\n    });\\n    return C;\\n  },\\n  def: function (that, key, value) {\\n    var entry = getEntry(that, key);\\n    var prev, index;\\n    // change existing entry\\n    if (entry) {\\n      entry.v = value;\\n    // create new entry\\n    } else {\\n      that._l = entry = {\\n        i: index = fastKey(key, true), // <- index\\n        k: key,                        // <- key\\n        v: value,                      // <- value\\n        p: prev = that._l,             // <- previous entry\\n        n: undefined,                  // <- next entry\\n        r: false                       // <- removed\\n      };\\n      if (!that._f) that._f = entry;\\n      if (prev) prev.n = entry;\\n      that[SIZE]++;\\n      // add to index\\n      if (index !== 'F') that._i[index] = entry;\\n    } return that;\\n  },\\n  getEntry: getEntry,\\n  setStrong: function (C, NAME, IS_MAP) {\\n    // add .keys, .values, .entries, [@@iterator]\\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\\n    $iterDefine(C, NAME, function (iterated, kind) {\\n      this._t = validate(iterated, NAME); // target\\n      this._k = kind;                     // kind\\n      this._l = undefined;                // previous\\n    }, function () {\\n      var that = this;\\n      var kind = that._k;\\n      var entry = that._l;\\n      // revert to the last existing entry\\n      while (entry && entry.r) entry = entry.p;\\n      // get next entry\\n      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {\\n        // or finish the iteration\\n        that._t = undefined;\\n        return step(1);\\n      }\\n      // return step by kind\\n      if (kind == 'keys') return step(0, entry.k);\\n      if (kind == 'values') return step(0, entry.v);\\n      return step(0, [entry.k, entry.v]);\\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\\n\\n    // add [@@species], 23.1.2.2, 23.2.2.2\\n    setSpecies(NAME);\\n  }\\n};\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"dP\",\"f\",\"create\",\"redefineAll\",\"ctx\",\"anInstance\",\"forOf\",\"$iterDefine\",\"step\",\"setSpecies\",\"DESCRIPTORS\",\"fastKey\",\"validate\",\"SIZE\",\"getEntry\",\"that\",\"key\",\"index\",\"_i\",\"entry\",\"_f\",\"n\",\"k\",\"getConstructor\",\"wrapper\",\"NAME\",\"IS_MAP\",\"ADDER\",\"C\",\"iterable\",\"_t\",\"undefined\",\"_l\",\"prototype\",\"clear\",\"data\",\"r\",\"p\",\"i\",\"delete\",\"next\",\"prev\",\"forEach\",\"callbackfn\",\"arguments\",\"length\",\"v\",\"has\",\"get\",\"def\",\"value\",\"setStrong\",\"iterated\",\"kind\",\"_k\"]\n}\n"]
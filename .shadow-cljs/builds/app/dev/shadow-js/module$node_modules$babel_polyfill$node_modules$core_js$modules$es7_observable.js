["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/babel-polyfill/node_modules/core-js/modules/es7.observable.js"],"~:js","shadow$provide.module$node_modules$babel_polyfill$node_modules$core_js$modules$es7_observable=function(global,require,module,exports){module=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_export\");global=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_global\");var core=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_core\"),microtask=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_microtask\")(),\nOBSERVABLE=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_wks\")(\"observable\"),aFunction=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_a_function\"),anObject=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_an_object\"),anInstance=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_an_instance\");exports=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_redefine_all\");var hide=\nrequire(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_hide\"),forOf=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_for_of\"),RETURN=forOf.RETURN,getMethod=function(fn){return null==fn?void 0:aFunction(fn)},cleanupSubscription=function(subscription){var cleanup=subscription._c;cleanup&&(subscription._c=void 0,cleanup())},subscriptionClosed=function(subscription){return void 0===subscription._o},Subscription=function(observer,subscriber){anObject(observer);\nthis._c=void 0;this._o=observer;observer=new SubscriptionObserver(this);try{var cleanup=subscriber(observer),subscription=cleanup;null!=cleanup&&(\"function\"===typeof cleanup.unsubscribe?cleanup=function(){subscription.unsubscribe()}:aFunction(cleanup),this._c=cleanup)}catch(e){observer.error(e);return}subscriptionClosed(this)&&cleanupSubscription(this)};Subscription.prototype=exports({},{unsubscribe:function(){subscriptionClosed(this)||(this._o=void 0,cleanupSubscription(this))}});var SubscriptionObserver=\nfunction(subscription){this._s=subscription};SubscriptionObserver.prototype=exports({},{next:function(value){var subscription=this._s;if(!subscriptionClosed(subscription)){var observer=subscription._o;try{var m=getMethod(observer.next);if(m)return m.call(observer,value)}catch(e){try{subscriptionClosed(subscription)||(subscription._o=void 0,cleanupSubscription(subscription))}finally{throw e;}}}},error:function(value){var subscription=this._s;if(subscriptionClosed(subscription))throw value;var observer=\nsubscription._o;subscription._o=void 0;try{var m=getMethod(observer.error);if(!m)throw value;value=m.call(observer,value)}catch(e){try{cleanupSubscription(subscription)}finally{throw e;}}cleanupSubscription(subscription);return value},complete:function(value){var subscription=this._s;if(!subscriptionClosed(subscription)){var observer=subscription._o;subscription._o=void 0;try{var m=getMethod(observer.complete);value=m?m.call(observer,value):void 0}catch(e){try{cleanupSubscription(subscription)}finally{throw e;\n}}cleanupSubscription(subscription);return value}}});var $Observable=function(subscriber){anInstance(this,$Observable,\"Observable\",\"_f\")._f=aFunction(subscriber)};exports($Observable.prototype,{subscribe:function(observer){return new Subscription(observer,this._f)},forEach:function(fn){var that=this;return new (core.Promise||global.Promise)(function(resolve,reject){aFunction(fn);var subscription=that.subscribe({next:function(value){try{return fn(value)}catch(e){reject(e),subscription.unsubscribe()}},\nerror:reject,complete:resolve})})}});exports($Observable,{from:function(x){var C=\"function\"===typeof this?this:$Observable,method=getMethod(anObject(x)[OBSERVABLE]);if(method){var observable=anObject(method.call(x));return observable.constructor===C?observable:new C(function(observer){return observable.subscribe(observer)})}return new C(function(observer){var done=!1;microtask(function(){if(!done){try{if(forOf(x,!1,function(it){observer.next(it);if(done)return RETURN})===RETURN)return}catch(e){if(done)throw e;\nobserver.error(e);return}observer.complete()}});return function(){done=!0}})},of:function(){for(var i=0,l=arguments.length,items=Array(l);i<l;)items[i]=arguments[i++];return new (\"function\"===typeof this?this:$Observable)(function(observer){var done=!1;microtask(function(){if(!done){for(var j=0;j<items.length;++j)if(observer.next(items[j]),done)return;observer.complete()}});return function(){done=!0}})}});hide($Observable.prototype,OBSERVABLE,function(){return this});module(module.G,{Observable:$Observable});\nrequire(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_set_species\")(\"Observable\")}","~:source","shadow$provide[\"module$node_modules$babel_polyfill$node_modules$core_js$modules$es7_observable\"] = function(global,require,module,exports) {\n'use strict';\n// https://github.com/zenparsing/es-observable\nvar $export = require('./_export');\nvar global = require('./_global');\nvar core = require('./_core');\nvar microtask = require('./_microtask')();\nvar OBSERVABLE = require('./_wks')('observable');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar anInstance = require('./_an-instance');\nvar redefineAll = require('./_redefine-all');\nvar hide = require('./_hide');\nvar forOf = require('./_for-of');\nvar RETURN = forOf.RETURN;\n\nvar getMethod = function (fn) {\n  return fn == null ? undefined : aFunction(fn);\n};\n\nvar cleanupSubscription = function (subscription) {\n  var cleanup = subscription._c;\n  if (cleanup) {\n    subscription._c = undefined;\n    cleanup();\n  }\n};\n\nvar subscriptionClosed = function (subscription) {\n  return subscription._o === undefined;\n};\n\nvar closeSubscription = function (subscription) {\n  if (!subscriptionClosed(subscription)) {\n    subscription._o = undefined;\n    cleanupSubscription(subscription);\n  }\n};\n\nvar Subscription = function (observer, subscriber) {\n  anObject(observer);\n  this._c = undefined;\n  this._o = observer;\n  observer = new SubscriptionObserver(this);\n  try {\n    var cleanup = subscriber(observer);\n    var subscription = cleanup;\n    if (cleanup != null) {\n      if (typeof cleanup.unsubscribe === 'function') cleanup = function () { subscription.unsubscribe(); };\n      else aFunction(cleanup);\n      this._c = cleanup;\n    }\n  } catch (e) {\n    observer.error(e);\n    return;\n  } if (subscriptionClosed(this)) cleanupSubscription(this);\n};\n\nSubscription.prototype = redefineAll({}, {\n  unsubscribe: function unsubscribe() { closeSubscription(this); }\n});\n\nvar SubscriptionObserver = function (subscription) {\n  this._s = subscription;\n};\n\nSubscriptionObserver.prototype = redefineAll({}, {\n  next: function next(value) {\n    var subscription = this._s;\n    if (!subscriptionClosed(subscription)) {\n      var observer = subscription._o;\n      try {\n        var m = getMethod(observer.next);\n        if (m) return m.call(observer, value);\n      } catch (e) {\n        try {\n          closeSubscription(subscription);\n        } finally {\n          throw e;\n        }\n      }\n    }\n  },\n  error: function error(value) {\n    var subscription = this._s;\n    if (subscriptionClosed(subscription)) throw value;\n    var observer = subscription._o;\n    subscription._o = undefined;\n    try {\n      var m = getMethod(observer.error);\n      if (!m) throw value;\n      value = m.call(observer, value);\n    } catch (e) {\n      try {\n        cleanupSubscription(subscription);\n      } finally {\n        throw e;\n      }\n    } cleanupSubscription(subscription);\n    return value;\n  },\n  complete: function complete(value) {\n    var subscription = this._s;\n    if (!subscriptionClosed(subscription)) {\n      var observer = subscription._o;\n      subscription._o = undefined;\n      try {\n        var m = getMethod(observer.complete);\n        value = m ? m.call(observer, value) : undefined;\n      } catch (e) {\n        try {\n          cleanupSubscription(subscription);\n        } finally {\n          throw e;\n        }\n      } cleanupSubscription(subscription);\n      return value;\n    }\n  }\n});\n\nvar $Observable = function Observable(subscriber) {\n  anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);\n};\n\nredefineAll($Observable.prototype, {\n  subscribe: function subscribe(observer) {\n    return new Subscription(observer, this._f);\n  },\n  forEach: function forEach(fn) {\n    var that = this;\n    return new (core.Promise || global.Promise)(function (resolve, reject) {\n      aFunction(fn);\n      var subscription = that.subscribe({\n        next: function (value) {\n          try {\n            return fn(value);\n          } catch (e) {\n            reject(e);\n            subscription.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve\n      });\n    });\n  }\n});\n\nredefineAll($Observable, {\n  from: function from(x) {\n    var C = typeof this === 'function' ? this : $Observable;\n    var method = getMethod(anObject(x)[OBSERVABLE]);\n    if (method) {\n      var observable = anObject(method.call(x));\n      return observable.constructor === C ? observable : new C(function (observer) {\n        return observable.subscribe(observer);\n      });\n    }\n    return new C(function (observer) {\n      var done = false;\n      microtask(function () {\n        if (!done) {\n          try {\n            if (forOf(x, false, function (it) {\n              observer.next(it);\n              if (done) return RETURN;\n            }) === RETURN) return;\n          } catch (e) {\n            if (done) throw e;\n            observer.error(e);\n            return;\n          } observer.complete();\n        }\n      });\n      return function () { done = true; };\n    });\n  },\n  of: function of() {\n    for (var i = 0, l = arguments.length, items = new Array(l); i < l;) items[i] = arguments[i++];\n    return new (typeof this === 'function' ? this : $Observable)(function (observer) {\n      var done = false;\n      microtask(function () {\n        if (!done) {\n          for (var j = 0; j < items.length; ++j) {\n            observer.next(items[j]);\n            if (done) return;\n          } observer.complete();\n        }\n      });\n      return function () { done = true; };\n    });\n  }\n});\n\nhide($Observable.prototype, OBSERVABLE, function () { return this; });\n\n$export($export.G, { Observable: $Observable });\n\nrequire('./_set-species')('Observable');\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_set_species","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_microtask","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_an_object","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_export","~$shadow.js","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_core","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_wks","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_for_of","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_redefine_all","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_global","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_an_instance","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_a_function","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_hide"]],"~:properties",["^5",["forEach","next","of","prototype","Observable","complete","error","_o","from","_s","_c","_f","subscribe","unsubscribe"]],"~:compiled-at",1666267695865,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$babel_polyfill$node_modules$core_js$modules$es7_observable.js\",\n\"lineCount\":10,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/babel-polyfill/node_modules/core-js/modules/es7.observable.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$babel_polyfill$node_modules$core_js$modules$es7_observable\\\"] = function(global,require,module,exports) {\\n'use strict';\\n// https://github.com/zenparsing/es-observable\\nvar $export = require('./_export');\\nvar global = require('./_global');\\nvar core = require('./_core');\\nvar microtask = require('./_microtask')();\\nvar OBSERVABLE = require('./_wks')('observable');\\nvar aFunction = require('./_a-function');\\nvar anObject = require('./_an-object');\\nvar anInstance = require('./_an-instance');\\nvar redefineAll = require('./_redefine-all');\\nvar hide = require('./_hide');\\nvar forOf = require('./_for-of');\\nvar RETURN = forOf.RETURN;\\n\\nvar getMethod = function (fn) {\\n  return fn == null ? undefined : aFunction(fn);\\n};\\n\\nvar cleanupSubscription = function (subscription) {\\n  var cleanup = subscription._c;\\n  if (cleanup) {\\n    subscription._c = undefined;\\n    cleanup();\\n  }\\n};\\n\\nvar subscriptionClosed = function (subscription) {\\n  return subscription._o === undefined;\\n};\\n\\nvar closeSubscription = function (subscription) {\\n  if (!subscriptionClosed(subscription)) {\\n    subscription._o = undefined;\\n    cleanupSubscription(subscription);\\n  }\\n};\\n\\nvar Subscription = function (observer, subscriber) {\\n  anObject(observer);\\n  this._c = undefined;\\n  this._o = observer;\\n  observer = new SubscriptionObserver(this);\\n  try {\\n    var cleanup = subscriber(observer);\\n    var subscription = cleanup;\\n    if (cleanup != null) {\\n      if (typeof cleanup.unsubscribe === 'function') cleanup = function () { subscription.unsubscribe(); };\\n      else aFunction(cleanup);\\n      this._c = cleanup;\\n    }\\n  } catch (e) {\\n    observer.error(e);\\n    return;\\n  } if (subscriptionClosed(this)) cleanupSubscription(this);\\n};\\n\\nSubscription.prototype = redefineAll({}, {\\n  unsubscribe: function unsubscribe() { closeSubscription(this); }\\n});\\n\\nvar SubscriptionObserver = function (subscription) {\\n  this._s = subscription;\\n};\\n\\nSubscriptionObserver.prototype = redefineAll({}, {\\n  next: function next(value) {\\n    var subscription = this._s;\\n    if (!subscriptionClosed(subscription)) {\\n      var observer = subscription._o;\\n      try {\\n        var m = getMethod(observer.next);\\n        if (m) return m.call(observer, value);\\n      } catch (e) {\\n        try {\\n          closeSubscription(subscription);\\n        } finally {\\n          throw e;\\n        }\\n      }\\n    }\\n  },\\n  error: function error(value) {\\n    var subscription = this._s;\\n    if (subscriptionClosed(subscription)) throw value;\\n    var observer = subscription._o;\\n    subscription._o = undefined;\\n    try {\\n      var m = getMethod(observer.error);\\n      if (!m) throw value;\\n      value = m.call(observer, value);\\n    } catch (e) {\\n      try {\\n        cleanupSubscription(subscription);\\n      } finally {\\n        throw e;\\n      }\\n    } cleanupSubscription(subscription);\\n    return value;\\n  },\\n  complete: function complete(value) {\\n    var subscription = this._s;\\n    if (!subscriptionClosed(subscription)) {\\n      var observer = subscription._o;\\n      subscription._o = undefined;\\n      try {\\n        var m = getMethod(observer.complete);\\n        value = m ? m.call(observer, value) : undefined;\\n      } catch (e) {\\n        try {\\n          cleanupSubscription(subscription);\\n        } finally {\\n          throw e;\\n        }\\n      } cleanupSubscription(subscription);\\n      return value;\\n    }\\n  }\\n});\\n\\nvar $Observable = function Observable(subscriber) {\\n  anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);\\n};\\n\\nredefineAll($Observable.prototype, {\\n  subscribe: function subscribe(observer) {\\n    return new Subscription(observer, this._f);\\n  },\\n  forEach: function forEach(fn) {\\n    var that = this;\\n    return new (core.Promise || global.Promise)(function (resolve, reject) {\\n      aFunction(fn);\\n      var subscription = that.subscribe({\\n        next: function (value) {\\n          try {\\n            return fn(value);\\n          } catch (e) {\\n            reject(e);\\n            subscription.unsubscribe();\\n          }\\n        },\\n        error: reject,\\n        complete: resolve\\n      });\\n    });\\n  }\\n});\\n\\nredefineAll($Observable, {\\n  from: function from(x) {\\n    var C = typeof this === 'function' ? this : $Observable;\\n    var method = getMethod(anObject(x)[OBSERVABLE]);\\n    if (method) {\\n      var observable = anObject(method.call(x));\\n      return observable.constructor === C ? observable : new C(function (observer) {\\n        return observable.subscribe(observer);\\n      });\\n    }\\n    return new C(function (observer) {\\n      var done = false;\\n      microtask(function () {\\n        if (!done) {\\n          try {\\n            if (forOf(x, false, function (it) {\\n              observer.next(it);\\n              if (done) return RETURN;\\n            }) === RETURN) return;\\n          } catch (e) {\\n            if (done) throw e;\\n            observer.error(e);\\n            return;\\n          } observer.complete();\\n        }\\n      });\\n      return function () { done = true; };\\n    });\\n  },\\n  of: function of() {\\n    for (var i = 0, l = arguments.length, items = new Array(l); i < l;) items[i] = arguments[i++];\\n    return new (typeof this === 'function' ? this : $Observable)(function (observer) {\\n      var done = false;\\n      microtask(function () {\\n        if (!done) {\\n          for (var j = 0; j < items.length; ++j) {\\n            observer.next(items[j]);\\n            if (done) return;\\n          } observer.complete();\\n        }\\n      });\\n      return function () { done = true; };\\n    });\\n  }\\n});\\n\\nhide($Observable.prototype, OBSERVABLE, function () { return this; });\\n\\n$export($export.G, { Observable: $Observable });\\n\\nrequire('./_set-species')('Observable');\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"$export\",\"core\",\"microtask\",\"OBSERVABLE\",\"aFunction\",\"anObject\",\"anInstance\",\"redefineAll\",\"hide\",\"forOf\",\"RETURN\",\"getMethod\",\"fn\",\"undefined\",\"cleanupSubscription\",\"subscription\",\"cleanup\",\"_c\",\"subscriptionClosed\",\"_o\",\"Subscription\",\"observer\",\"subscriber\",\"SubscriptionObserver\",\"unsubscribe\",\"e\",\"error\",\"prototype\",\"_s\",\"next\",\"value\",\"m\",\"call\",\"complete\",\"$Observable\",\"_f\",\"subscribe\",\"forEach\",\"that\",\"Promise\",\"resolve\",\"reject\",\"from\",\"x\",\"C\",\"method\",\"observable\",\"constructor\",\"done\",\"it\",\"of\",\"i\",\"l\",\"arguments\",\"length\",\"items\",\"Array\",\"j\",\"G\",\"Observable\"]\n}\n"]
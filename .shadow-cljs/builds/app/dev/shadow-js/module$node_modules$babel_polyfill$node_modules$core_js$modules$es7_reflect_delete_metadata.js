["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/babel-polyfill/node_modules/core-js/modules/es7.reflect.delete-metadata.js"],"~:js","shadow$provide.module$node_modules$babel_polyfill$node_modules$core_js$modules$es7_reflect_delete_metadata=function(global,require,module,exports){global=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_metadata\");var anObject=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_an_object\"),toMetaKey=global.key,getOrCreateMetadataMap=global.map,store=global.store;global.exp({deleteMetadata:function(metadataKey,target){var targetKey=3>arguments.length?\nvoid 0:toMetaKey(arguments[2]),metadataMap=getOrCreateMetadataMap(anObject(target),targetKey,!1);if(void 0===metadataMap||!metadataMap[\"delete\"](metadataKey))return!1;if(metadataMap.size)return!0;metadataMap=store.get(target);metadataMap[\"delete\"](targetKey);return!!metadataMap.size||store[\"delete\"](target)}})}","~:source","shadow$provide[\"module$node_modules$babel_polyfill$node_modules$core_js$modules$es7_reflect_delete_metadata\"] = function(global,require,module,exports) {\nvar metadata = require('./_metadata');\nvar anObject = require('./_an-object');\nvar toMetaKey = metadata.key;\nvar getOrCreateMetadataMap = metadata.map;\nvar store = metadata.store;\n\nmetadata.exp({ deleteMetadata: function deleteMetadata(metadataKey, target /* , targetKey */) {\n  var targetKey = arguments.length < 3 ? undefined : toMetaKey(arguments[2]);\n  var metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);\n  if (metadataMap === undefined || !metadataMap['delete'](metadataKey)) return false;\n  if (metadataMap.size) return true;\n  var targetMetadata = store.get(target);\n  targetMetadata['delete'](targetKey);\n  return !!targetMetadata.size || store['delete'](target);\n} });\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_an_object","~$shadow.js","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_metadata"]],"~:properties",["^5",["deleteMetadata"]],"~:compiled-at",1666267695864,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$babel_polyfill$node_modules$core_js$modules$es7_reflect_delete_metadata.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,2FAAA,CAAgH,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACpJC,MAAAA,CAAWH,OAAA,CAAQ,2EAAR,CACf,KAAII,SAAWJ,OAAA,CAAQ,4EAAR,CAAf,CACIK,UAAYF,MAASG,CAAAA,GADzB,CAEIC,uBAAyBJ,MAASK,CAAAA,GAFtC,CAGIC,MAAQN,MAASM,CAAAA,KAErBN,OAASO,CAAAA,GAAT,CAAa,CAAEC,eAAgBA,QAAuB,CAACC,WAAD,CAAcC,MAAd,CAAwC,CAC5F,IAAIC,UAA+B,CAAnB,CAAAC,SAAUC,CAAAA,MAAV;AAAuBC,IAAAA,EAAvB,CAAmCZ,SAAA,CAAUU,SAAA,CAAU,CAAV,CAAV,CAAnD,CACIG,YAAcX,sBAAA,CAAuBH,QAAA,CAASS,MAAT,CAAvB,CAAyCC,SAAzC,CAAoD,CAAA,CAApD,CAClB,IAAoBG,IAAAA,EAApB,GAAIC,WAAJ,EAAiC,CAACA,WAAA,CAAY,QAAZ,CAAA,CAAsBN,WAAtB,CAAlC,CAAsE,MAAO,CAAA,CAC7E,IAAIM,WAAYC,CAAAA,IAAhB,CAAsB,MAAO,CAAA,CACzBC,YAAAA,CAAiBX,KAAMY,CAAAA,GAAN,CAAUR,MAAV,CACrBO,YAAA,CAAe,QAAf,CAAA,CAAyBN,SAAzB,CACA,OAAO,CAAC,CAACM,WAAeD,CAAAA,IAAxB,EAAgCV,KAAA,CAAM,QAAN,CAAA,CAAgBI,MAAhB,CAP4D,CAAjF,CAAb,CAPwJ;\",\n\"sources\":[\"node_modules/babel-polyfill/node_modules/core-js/modules/es7.reflect.delete-metadata.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$babel_polyfill$node_modules$core_js$modules$es7_reflect_delete_metadata\\\"] = function(global,require,module,exports) {\\nvar metadata = require('./_metadata');\\nvar anObject = require('./_an-object');\\nvar toMetaKey = metadata.key;\\nvar getOrCreateMetadataMap = metadata.map;\\nvar store = metadata.store;\\n\\nmetadata.exp({ deleteMetadata: function deleteMetadata(metadataKey, target /* , targetKey */) {\\n  var targetKey = arguments.length < 3 ? undefined : toMetaKey(arguments[2]);\\n  var metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);\\n  if (metadataMap === undefined || !metadataMap['delete'](metadataKey)) return false;\\n  if (metadataMap.size) return true;\\n  var targetMetadata = store.get(target);\\n  targetMetadata['delete'](targetKey);\\n  return !!targetMetadata.size || store['delete'](target);\\n} });\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"metadata\",\"anObject\",\"toMetaKey\",\"key\",\"getOrCreateMetadataMap\",\"map\",\"store\",\"exp\",\"deleteMetadata\",\"metadataKey\",\"target\",\"targetKey\",\"arguments\",\"length\",\"undefined\",\"metadataMap\",\"size\",\"targetMetadata\",\"get\"]\n}\n"]
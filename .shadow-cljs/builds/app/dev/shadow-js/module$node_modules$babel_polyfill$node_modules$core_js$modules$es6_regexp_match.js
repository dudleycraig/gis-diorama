["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/babel-polyfill/node_modules/core-js/modules/es6.regexp.match.js"],"~:js","shadow$provide.module$node_modules$babel_polyfill$node_modules$core_js$modules$es6_regexp_match=function(global,require,module,exports){var anObject=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_an_object\"),toLength=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_to_length\"),advanceStringIndex=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_advance_string_index\"),regExpExec=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_regexp_exec_abstract\");\nrequire(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_fix_re_wks\")(\"match\",1,function(defined,MATCH,$match,maybeCallNative){return[function(regexp){var O=defined(this),fn=void 0==regexp?void 0:regexp[MATCH];return void 0!==fn?fn.call(regexp,O):(new RegExp(regexp))[MATCH](String(O))},function(regexp){var res=maybeCallNative($match,regexp,this);if(res.done)return res.value;regexp=anObject(regexp);res=String(this);if(!regexp.global)return regExpExec(regexp,res);var fullUnicode=regexp.unicode;\nregexp.lastIndex=0;for(var A=[],n=0,result;null!==(result=regExpExec(regexp,res));)result=String(result[0]),A[n]=result,\"\"===result&&(regexp.lastIndex=advanceStringIndex(res,toLength(regexp.lastIndex),fullUnicode)),n++;return 0===n?null:A}]})}","~:source","shadow$provide[\"module$node_modules$babel_polyfill$node_modules$core_js$modules$es6_regexp_match\"] = function(global,require,module,exports) {\n'use strict';\n\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar advanceStringIndex = require('./_advance-string-index');\nvar regExpExec = require('./_regexp-exec-abstract');\n\n// @@match logic\nrequire('./_fix-re-wks')('match', 1, function (defined, MATCH, $match, maybeCallNative) {\n  return [\n    // `String.prototype.match` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = defined(this);\n      var fn = regexp == undefined ? undefined : regexp[MATCH];\n      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n    },\n    // `RegExp.prototype[@@match]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match\n    function (regexp) {\n      var res = maybeCallNative($match, regexp, this);\n      if (res.done) return res.value;\n      var rx = anObject(regexp);\n      var S = String(this);\n      if (!rx.global) return regExpExec(rx, S);\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n      while ((result = regExpExec(rx, S)) !== null) {\n        var matchStr = String(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n      return n === 0 ? null : A;\n    }\n  ];\n});\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_regexp_exec_abstract","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_to_length","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_an_object","~$shadow.js","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_fix_re_wks","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_advance_string_index"]],"~:properties",["^5",["lastIndex"]],"~:compiled-at",1666267695846,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$babel_polyfill$node_modules$core_js$modules$es6_regexp_match.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,gFAAA,CAAqG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG7I,IAAIC,SAAWH,OAAA,CAAQ,4EAAR,CAAf,CACII,SAAWJ,OAAA,CAAQ,4EAAR,CADf,CAEIK,mBAAqBL,OAAA,CAAQ,uFAAR,CAFzB,CAGIM,WAAaN,OAAA,CAAQ,uFAAR,CAGjBA;OAAA,CAAQ,6EAAR,CAAA,CAAyB,OAAzB,CAAkC,CAAlC,CAAqC,QAAS,CAACO,OAAD,CAAUC,KAAV,CAAiBC,MAAjB,CAAyBC,eAAzB,CAA0C,CACtF,MAAO,CAGLC,QAAc,CAACC,MAAD,CAAS,CACrB,IAAIC,EAAIN,OAAA,CAAQ,IAAR,CAAR,CACIO,GAAeC,IAAAA,EAAV,EAAAH,MAAA,CAAsBG,IAAAA,EAAtB,CAAkCH,MAAA,CAAOJ,KAAP,CAC3C,OAAcO,KAAAA,EAAP,GAAAD,EAAA,CAAmBA,EAAGE,CAAAA,IAAH,CAAQJ,MAAR,CAAgBC,CAAhB,CAAnB,CAAwC,CAAA,IAAII,MAAJ,CAAWL,MAAX,CAAA,EAAmBJ,KAAnB,CAAA,CAA0BU,MAAA,CAAOL,CAAP,CAA1B,CAH1B,CAHlB,CAUL,QAAS,CAACD,MAAD,CAAS,CAChB,IAAIO,IAAMT,eAAA,CAAgBD,MAAhB,CAAwBG,MAAxB,CAAgC,IAAhC,CACV,IAAIO,GAAIC,CAAAA,IAAR,CAAc,MAAOD,IAAIE,CAAAA,KACrBC,OAAAA,CAAKnB,QAAA,CAASS,MAAT,CACLW,IAAAA,CAAIL,MAAA,CAAO,IAAP,CACR,IAAI,CAACI,MAAGvB,CAAAA,MAAR,CAAgB,MAAOO,WAAA,CAAWgB,MAAX,CAAeC,GAAf,CACvB,KAAIC,YAAcF,MAAGG,CAAAA,OACrBH;MAAGI,CAAAA,SAAH,CAAe,CAIf,KAHA,IAAIC,EAAI,EAAR,CACIC,EAAI,CADR,CAEIC,MACJ,CAAwC,IAAxC,IAAQA,MAAR,CAAiBvB,UAAA,CAAWgB,MAAX,CAAeC,GAAf,CAAjB,EAAA,CACMO,MAGJ,CAHeZ,MAAA,CAAOW,MAAA,CAAO,CAAP,CAAP,CAGf,CAFAF,CAAA,CAAEC,CAAF,CAEA,CAFOE,MAEP,CADiB,EACjB,GADIA,MACJ,GADqBR,MAAGI,CAAAA,SACxB,CADoCrB,kBAAA,CAAmBkB,GAAnB,CAAsBnB,QAAA,CAASkB,MAAGI,CAAAA,SAAZ,CAAtB,CAA8CF,WAA9C,CACpC,EAAAI,CAAA,EAEF,OAAa,EAAN,GAAAA,CAAA,CAAU,IAAV,CAAiBD,CAjBR,CAVb,CAD+E,CAAxF,CAT6I;\",\n\"sources\":[\"node_modules/babel-polyfill/node_modules/core-js/modules/es6.regexp.match.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$babel_polyfill$node_modules$core_js$modules$es6_regexp_match\\\"] = function(global,require,module,exports) {\\n'use strict';\\n\\nvar anObject = require('./_an-object');\\nvar toLength = require('./_to-length');\\nvar advanceStringIndex = require('./_advance-string-index');\\nvar regExpExec = require('./_regexp-exec-abstract');\\n\\n// @@match logic\\nrequire('./_fix-re-wks')('match', 1, function (defined, MATCH, $match, maybeCallNative) {\\n  return [\\n    // `String.prototype.match` method\\n    // https://tc39.github.io/ecma262/#sec-string.prototype.match\\n    function match(regexp) {\\n      var O = defined(this);\\n      var fn = regexp == undefined ? undefined : regexp[MATCH];\\n      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\\n    },\\n    // `RegExp.prototype[@@match]` method\\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match\\n    function (regexp) {\\n      var res = maybeCallNative($match, regexp, this);\\n      if (res.done) return res.value;\\n      var rx = anObject(regexp);\\n      var S = String(this);\\n      if (!rx.global) return regExpExec(rx, S);\\n      var fullUnicode = rx.unicode;\\n      rx.lastIndex = 0;\\n      var A = [];\\n      var n = 0;\\n      var result;\\n      while ((result = regExpExec(rx, S)) !== null) {\\n        var matchStr = String(result[0]);\\n        A[n] = matchStr;\\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\\n        n++;\\n      }\\n      return n === 0 ? null : A;\\n    }\\n  ];\\n});\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"anObject\",\"toLength\",\"advanceStringIndex\",\"regExpExec\",\"defined\",\"MATCH\",\"$match\",\"maybeCallNative\",\"match\",\"regexp\",\"O\",\"fn\",\"undefined\",\"call\",\"RegExp\",\"String\",\"res\",\"done\",\"value\",\"rx\",\"S\",\"fullUnicode\",\"unicode\",\"lastIndex\",\"A\",\"n\",\"result\",\"matchStr\"]\n}\n"]
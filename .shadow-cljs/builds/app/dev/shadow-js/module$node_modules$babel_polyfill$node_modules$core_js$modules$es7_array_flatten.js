["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/babel-polyfill/node_modules/core-js/modules/es7.array.flatten.js"],"~:js","shadow$provide.module$node_modules$babel_polyfill$node_modules$core_js$modules$es7_array_flatten=function(global,require,module,exports){global=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_export\");var flattenIntoArray=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_flatten_into_array\"),toObject=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_to_object\"),toLength=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_to_length\"),\ntoInteger=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_to_integer\"),arraySpeciesCreate=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_array_species_create\");global(global.P,\"Array\",{flatten:function(JSCompiler_OptimizeArgumentsArray_p19){var O=toObject(this),sourceLen=toLength(O.length),A=arraySpeciesCreate(O,0);flattenIntoArray(A,O,O,sourceLen,0,void 0===JSCompiler_OptimizeArgumentsArray_p19?1:toInteger(JSCompiler_OptimizeArgumentsArray_p19));\nreturn A}});require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_add_to_unscopables\")(\"flatten\")}","~:source","shadow$provide[\"module$node_modules$babel_polyfill$node_modules$core_js$modules$es7_array_flatten\"] = function(global,require,module,exports) {\n'use strict';\n// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatten\nvar $export = require('./_export');\nvar flattenIntoArray = require('./_flatten-into-array');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar toInteger = require('./_to-integer');\nvar arraySpeciesCreate = require('./_array-species-create');\n\n$export($export.P, 'Array', {\n  flatten: function flatten(/* depthArg = 1 */) {\n    var depthArg = arguments[0];\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A = arraySpeciesCreate(O, 0);\n    flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toInteger(depthArg));\n    return A;\n  }\n});\n\nrequire('./_add-to-unscopables')('flatten');\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_flatten_into_array","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_array_species_create","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_to_length","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_export","~$shadow.js","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_to_object","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_add_to_unscopables","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_to_integer"]],"~:properties",["^5",["flatten"]],"~:compiled-at",1666267695858,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$babel_polyfill$node_modules$core_js$modules$es7_array_flatten.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,iFAAA,CAAsG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG1IC,MAAAA,CAAUH,OAAA,CAAQ,yEAAR,CACd,KAAII,iBAAmBJ,OAAA,CAAQ,qFAAR,CAAvB,CACIK,SAAWL,OAAA,CAAQ,4EAAR,CADf,CAEIM,SAAWN,OAAA,CAAQ,4EAAR,CAFf;AAGIO,UAAYP,OAAA,CAAQ,6EAAR,CAHhB,CAIIQ,mBAAqBR,OAAA,CAAQ,uFAAR,CAEzBG,OAAA,CAAQA,MAAQM,CAAAA,CAAhB,CAAmB,OAAnB,CAA4B,CAC1BC,QAASA,QAAgB,CAAA,qCAAA,CAAqB,CAE5C,IAAIC,EAAIN,QAAA,CAAS,IAAT,CAAR,CACIO,UAAYN,QAAA,CAASK,CAAEE,CAAAA,MAAX,CADhB,CAEIC,EAAIN,kBAAA,CAAmBG,CAAnB,CAAsB,CAAtB,CACRP,iBAAA,CAAiBU,CAAjB,CAAoBH,CAApB,CAAuBA,CAAvB,CAA0BC,SAA1B,CAAqC,CAArC,CAAqDG,IAAAA,EAAb,GAJzBC,qCAIyB,CAAyB,CAAzB,CAA6BT,SAAA,CAJtDS,qCAIsD,CAArE,CACA;MAAOF,EANqC,CADpB,CAA5B,CAWAd,QAAA,CAAQ,qFAAR,CAAA,CAAiC,SAAjC,CArB8I;\",\n\"sources\":[\"node_modules/babel-polyfill/node_modules/core-js/modules/es7.array.flatten.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$babel_polyfill$node_modules$core_js$modules$es7_array_flatten\\\"] = function(global,require,module,exports) {\\n'use strict';\\n// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatten\\nvar $export = require('./_export');\\nvar flattenIntoArray = require('./_flatten-into-array');\\nvar toObject = require('./_to-object');\\nvar toLength = require('./_to-length');\\nvar toInteger = require('./_to-integer');\\nvar arraySpeciesCreate = require('./_array-species-create');\\n\\n$export($export.P, 'Array', {\\n  flatten: function flatten(/* depthArg = 1 */) {\\n    var depthArg = arguments[0];\\n    var O = toObject(this);\\n    var sourceLen = toLength(O.length);\\n    var A = arraySpeciesCreate(O, 0);\\n    flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toInteger(depthArg));\\n    return A;\\n  }\\n});\\n\\nrequire('./_add-to-unscopables')('flatten');\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"$export\",\"flattenIntoArray\",\"toObject\",\"toLength\",\"toInteger\",\"arraySpeciesCreate\",\"P\",\"flatten\",\"O\",\"sourceLen\",\"length\",\"A\",\"undefined\",\"depthArg\"]\n}\n"]
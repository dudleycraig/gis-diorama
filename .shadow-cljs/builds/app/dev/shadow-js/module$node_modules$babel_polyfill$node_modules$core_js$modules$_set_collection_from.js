["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/babel-polyfill/node_modules/core-js/modules/_set-collection-from.js"],"~:js","shadow$provide.module$node_modules$babel_polyfill$node_modules$core_js$modules$_set_collection_from=function(global,require,module,exports){var $export=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_export\"),aFunction=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_a_function\"),ctx=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_ctx\"),forOf=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_for_of\");\nmodule.exports=function(COLLECTION){$export($export.S,COLLECTION,{from:function(source,JSCompiler_OptimizeArgumentsArray_p20,JSCompiler_OptimizeArgumentsArray_p21){var mapping;aFunction(this);(mapping=void 0!==JSCompiler_OptimizeArgumentsArray_p20)&&aFunction(JSCompiler_OptimizeArgumentsArray_p20);if(void 0==source)return new this;var A=[];if(mapping){var n=0;var cb=ctx(JSCompiler_OptimizeArgumentsArray_p20,JSCompiler_OptimizeArgumentsArray_p21,2);forOf(source,!1,function(nextItem){A.push(cb(nextItem,\nn++))})}else forOf(source,!1,A.push,A);return new this(A)}})}}","~:source","shadow$provide[\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_set_collection_from\"] = function(global,require,module,exports) {\n'use strict';\n// https://tc39.github.io/proposal-setmap-offrom/\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar ctx = require('./_ctx');\nvar forOf = require('./_for-of');\n\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, { from: function from(source /* , mapFn, thisArg */) {\n    var mapFn = arguments[1];\n    var mapping, A, n, cb;\n    aFunction(this);\n    mapping = mapFn !== undefined;\n    if (mapping) aFunction(mapFn);\n    if (source == undefined) return new this();\n    A = [];\n    if (mapping) {\n      n = 0;\n      cb = ctx(mapFn, arguments[2], 2);\n      forOf(source, false, function (nextItem) {\n        A.push(cb(nextItem, n++));\n      });\n    } else {\n      forOf(source, false, A.push, A);\n    }\n    return new this(A);\n  } });\n};\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_export","~$shadow.js","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_for_of","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_ctx","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_a_function"]],"~:properties",["^5",["from"]],"~:compiled-at",1666267695862,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_set_collection_from.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,oFAAA,CAAyG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGjJ,IAAIC,QAAUH,OAAA,CAAQ,yEAAR,CAAd,CACII,UAAYJ,OAAA,CAAQ,6EAAR,CADhB,CAEIK,IAAML,OAAA,CAAQ,sEAAR,CAFV,CAGIM,MAAQN,OAAA,CAAQ,yEAAR,CAEZC;MAAOC,CAAAA,OAAP,CAAiBK,QAAS,CAACC,UAAD,CAAa,CACrCL,OAAA,CAAQA,OAAQM,CAAAA,CAAhB,CAAmBD,UAAnB,CAA+B,CAAEE,KAAMA,QAAa,CAACC,MAAD,CAAA,qCAAA,CAAA,qCAAA,CAAgC,CAAA,IAE9EC,OACJR,UAAA,CAAU,IAAV,CAEA,EADAQ,OACA,CADoBC,IAAAA,EACpB,GAJYC,qCAIZ,GAAaV,SAAA,CAJDU,qCAIC,CACb,IAAcD,IAAAA,EAAd,EAAIF,MAAJ,CAAyB,MAAO,KAAI,IACpC,KAAAI,EAAI,EACJ,IAAIH,OAAJ,CAAa,CACX,IAAAI,EAAI,CACJ,KAAAC,GAAKZ,GAAA,CATKS,qCASL,CAAW,qCAAX,CAAyB,CAAzB,CACLR,MAAA,CAAMK,MAAN,CAAc,CAAA,CAAd,CAAqB,QAAS,CAACO,QAAD,CAAW,CACvCH,CAAEI,CAAAA,IAAF,CAAOF,EAAA,CAAGC,QAAH;AAAaF,CAAA,EAAb,CAAP,CADuC,CAAzC,CAHW,CAAb,IAOEV,MAAA,CAAMK,MAAN,CAAc,CAAA,CAAd,CAAqBI,CAAEI,CAAAA,IAAvB,CAA6BJ,CAA7B,CAEF,OAAO,KAAI,IAAJ,CAASA,CAAT,CAjB2E,CAArD,CAA/B,CADqC,CAR0G;\",\n\"sources\":[\"node_modules/babel-polyfill/node_modules/core-js/modules/_set-collection-from.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_set_collection_from\\\"] = function(global,require,module,exports) {\\n'use strict';\\n// https://tc39.github.io/proposal-setmap-offrom/\\nvar $export = require('./_export');\\nvar aFunction = require('./_a-function');\\nvar ctx = require('./_ctx');\\nvar forOf = require('./_for-of');\\n\\nmodule.exports = function (COLLECTION) {\\n  $export($export.S, COLLECTION, { from: function from(source /* , mapFn, thisArg */) {\\n    var mapFn = arguments[1];\\n    var mapping, A, n, cb;\\n    aFunction(this);\\n    mapping = mapFn !== undefined;\\n    if (mapping) aFunction(mapFn);\\n    if (source == undefined) return new this();\\n    A = [];\\n    if (mapping) {\\n      n = 0;\\n      cb = ctx(mapFn, arguments[2], 2);\\n      forOf(source, false, function (nextItem) {\\n        A.push(cb(nextItem, n++));\\n      });\\n    } else {\\n      forOf(source, false, A.push, A);\\n    }\\n    return new this(A);\\n  } });\\n};\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"$export\",\"aFunction\",\"ctx\",\"forOf\",\"module.exports\",\"COLLECTION\",\"S\",\"from\",\"source\",\"mapping\",\"undefined\",\"mapFn\",\"A\",\"n\",\"cb\",\"nextItem\",\"push\"]\n}\n"]
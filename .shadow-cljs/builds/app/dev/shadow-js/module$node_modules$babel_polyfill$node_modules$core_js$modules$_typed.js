["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/babel-polyfill/node_modules/core-js/modules/_typed.js"],"~:js","shadow$provide.module$node_modules$babel_polyfill$node_modules$core_js$modules$_typed=function(global,require,module,exports){global=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_global\");exports=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_hide\");var uid=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_uid\");require=uid(\"typed_array\");uid=uid(\"view\");for(var ABV=!(!global.ArrayBuffer||!global.DataView),CONSTR=ABV,i=\n0,Typed,TypedArrayConstructors=\"Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array\".split(\" \");9>i;)(Typed=global[TypedArrayConstructors[i++]])?(exports(Typed.prototype,require,!0),exports(Typed.prototype,uid,!0)):CONSTR=!1;module.exports={ABV,CONSTR,TYPED:require,VIEW:uid}}","~:source","shadow$provide[\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_typed\"] = function(global,require,module,exports) {\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar uid = require('./_uid');\nvar TYPED = uid('typed_array');\nvar VIEW = uid('view');\nvar ABV = !!(global.ArrayBuffer && global.DataView);\nvar CONSTR = ABV;\nvar i = 0;\nvar l = 9;\nvar Typed;\n\nvar TypedArrayConstructors = (\n  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'\n).split(',');\n\nwhile (i < l) {\n  if (Typed = global[TypedArrayConstructors[i++]]) {\n    hide(Typed.prototype, TYPED, true);\n    hide(Typed.prototype, VIEW, true);\n  } else CONSTR = false;\n}\n\nmodule.exports = {\n  ABV: ABV,\n  CONSTR: CONSTR,\n  TYPED: TYPED,\n  VIEW: VIEW\n};\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_uid","~$shadow.js","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_global","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_hide"]],"~:properties",["^5",["TYPED","ABV","VIEW","CONSTR"]],"~:compiled-at",1666267695852,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_typed.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,sEAAA,CAA2F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC/HH,MAAJ,CAAaC,OAAA,CAAQ,yEAAR,CACTG,QAAAA,CAAOH,OAAA,CAAQ,uEAAR,CACX,KAAII,IAAMJ,OAAA,CAAQ,sEAAR,CACNK,QAAAA,CAAQD,GAAA,CAAI,aAAJ,CACRE,IAAAA,CAAOF,GAAA,CAAI,MAAJ,CAWX,KAVA,IAAIG,IAAM,EAAUC,CAAPT,MAAOS,CAAAA,WAAV,EAAgCC,CAAPV,MAAOU,CAAAA,QAAhC,CAAV,CACIC,OAASH,GADb,CAEII;AAAI,CAFR,CAIIC,KAJJ,CAMIC,uBAAyB,gHAAA,CAAA,KAAA,CAAA,GAAA,CAI7B,CAPQC,CAOR,CAAOH,CAAP,CAAA,CACE,CAAIC,KAAJ,CAAYb,MAAA,CAAOc,sBAAA,CAAuBF,CAAA,EAAvB,CAAP,CAAZ,GACER,OAAA,CAAKS,KAAMG,CAAAA,SAAX,CAAsBV,OAAtB,CAA6B,CAAA,CAA7B,CACA,CAAAF,OAAA,CAAKS,KAAMG,CAAAA,SAAX,CAAsBT,GAAtB,CAA4B,CAAA,CAA5B,CAFF,EAGOI,MAHP,CAGgB,CAAA,CAGlBT,OAAOC,CAAAA,OAAP,CAAiB,CACVK,GADU,CAEPG,MAFO,CAGfL,MAAOA,OAHQ,CAIfC,KAAMA,GAJS,CAvBkH;\",\n\"sources\":[\"node_modules/babel-polyfill/node_modules/core-js/modules/_typed.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_typed\\\"] = function(global,require,module,exports) {\\nvar global = require('./_global');\\nvar hide = require('./_hide');\\nvar uid = require('./_uid');\\nvar TYPED = uid('typed_array');\\nvar VIEW = uid('view');\\nvar ABV = !!(global.ArrayBuffer && global.DataView);\\nvar CONSTR = ABV;\\nvar i = 0;\\nvar l = 9;\\nvar Typed;\\n\\nvar TypedArrayConstructors = (\\n  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'\\n).split(',');\\n\\nwhile (i < l) {\\n  if (Typed = global[TypedArrayConstructors[i++]]) {\\n    hide(Typed.prototype, TYPED, true);\\n    hide(Typed.prototype, VIEW, true);\\n  } else CONSTR = false;\\n}\\n\\nmodule.exports = {\\n  ABV: ABV,\\n  CONSTR: CONSTR,\\n  TYPED: TYPED,\\n  VIEW: VIEW\\n};\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"hide\",\"uid\",\"TYPED\",\"VIEW\",\"ABV\",\"ArrayBuffer\",\"DataView\",\"CONSTR\",\"i\",\"Typed\",\"TypedArrayConstructors\",\"l\",\"prototype\"]\n}\n"]
["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/babel-polyfill/node_modules/core-js/modules/_regexp-exec-abstract.js"],"~:js","shadow$provide.module$node_modules$babel_polyfill$node_modules$core_js$modules$_regexp_exec_abstract=function(global,require,module,exports){var classof=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_classof\"),builtinExec=RegExp.prototype.exec;module.exports=function(R,S){var exec=R.exec;if(\"function\"===typeof exec){R=exec.call(R,S);if(\"object\"!==typeof R)throw new TypeError(\"RegExp exec method returned something other than an Object or null\");return R}if(\"RegExp\"!==classof(R))throw new TypeError(\"RegExp#exec called on incompatible receiver\");\nreturn builtinExec.call(R,S)}}","~:source","shadow$provide[\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_regexp_exec_abstract\"] = function(global,require,module,exports) {\n'use strict';\n\nvar classof = require('./_classof');\nvar builtinExec = RegExp.prototype.exec;\n\n // `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw new TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n  if (classof(R) !== 'RegExp') {\n    throw new TypeError('RegExp#exec called on incompatible receiver');\n  }\n  return builtinExec.call(R, S);\n};\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_classof","~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1666267695845,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_regexp_exec_abstract.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,qFAAA,CAA0G,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGlJ,IAAIC,QAAUH,OAAA,CAAQ,0EAAR,CAAd,CACII,YAAcC,MAAOC,CAAAA,SAAUC,CAAAA,IAInCN,OAAOC,CAAAA,OAAP,CAAiBM,QAAS,CAACC,CAAD,CAAIC,CAAJ,CAAO,CAC/B,IAAIH,KAAOE,CAAEF,CAAAA,IACb,IAAoB,UAApB,GAAI,MAAOA,KAAX,CAAgC,CAC1BI,CAAAA,CAASJ,IAAKK,CAAAA,IAAL,CAAUH,CAAV,CAAaC,CAAb,CACb,IAAsB,QAAtB,GAAI,MAAOC,EAAX,CACE,KAAM,KAAIE,SAAJ,CAAc,oEAAd,CAAN,CAEF,MAAOF,EALuB,CAOhC,GAAmB,QAAnB,GAAIR,OAAA,CAAQM,CAAR,CAAJ,CACE,KAAM,KAAII,SAAJ,CAAc,6CAAd,CAAN;AAEF,MAAOT,YAAYQ,CAAAA,IAAZ,CAAiBH,CAAjB,CAAoBC,CAApB,CAZwB,CARiH;\",\n\"sources\":[\"node_modules/babel-polyfill/node_modules/core-js/modules/_regexp-exec-abstract.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_regexp_exec_abstract\\\"] = function(global,require,module,exports) {\\n'use strict';\\n\\nvar classof = require('./_classof');\\nvar builtinExec = RegExp.prototype.exec;\\n\\n // `RegExpExec` abstract operation\\n// https://tc39.github.io/ecma262/#sec-regexpexec\\nmodule.exports = function (R, S) {\\n  var exec = R.exec;\\n  if (typeof exec === 'function') {\\n    var result = exec.call(R, S);\\n    if (typeof result !== 'object') {\\n      throw new TypeError('RegExp exec method returned something other than an Object or null');\\n    }\\n    return result;\\n  }\\n  if (classof(R) !== 'RegExp') {\\n    throw new TypeError('RegExp#exec called on incompatible receiver');\\n  }\\n  return builtinExec.call(R, S);\\n};\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"classof\",\"builtinExec\",\"RegExp\",\"prototype\",\"exec\",\"module.exports\",\"R\",\"S\",\"result\",\"call\",\"TypeError\"]\n}\n"]
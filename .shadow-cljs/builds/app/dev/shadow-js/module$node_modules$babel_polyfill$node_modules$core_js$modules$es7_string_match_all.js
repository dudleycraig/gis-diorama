["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/babel-polyfill/node_modules/core-js/modules/es7.string.match-all.js"],"~:js","shadow$provide.module$node_modules$babel_polyfill$node_modules$core_js$modules$es7_string_match_all=function(global,require,module,exports){global=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_export\");var defined=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_defined\"),toLength=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_to_length\"),isRegExp=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_is_regexp\"),\ngetFlags=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_flags\"),RegExpProto=RegExp.prototype,$RegExpStringIterator=function(regexp,string){this._r=regexp;this._s=string};require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_iter_create\")($RegExpStringIterator,\"RegExp String\",function(){var match=this._r.exec(this._s);return{value:match,done:null===match}});global(global.P,\"String\",{matchAll:function(regexp){defined(this);if(!isRegExp(regexp))throw TypeError(regexp+\n\" is not a regexp!\");var S=String(this),flags=\"flags\"in RegExpProto?String(regexp.flags):getFlags.call(regexp);flags=new RegExp(regexp.source,~flags.indexOf(\"g\")?flags:\"g\"+flags);flags.lastIndex=toLength(regexp.lastIndex);return new $RegExpStringIterator(flags,S)}})}","~:source","shadow$provide[\"module$node_modules$babel_polyfill$node_modules$core_js$modules$es7_string_match_all\"] = function(global,require,module,exports) {\n'use strict';\n// https://tc39.github.io/String.prototype.matchAll/\nvar $export = require('./_export');\nvar defined = require('./_defined');\nvar toLength = require('./_to-length');\nvar isRegExp = require('./_is-regexp');\nvar getFlags = require('./_flags');\nvar RegExpProto = RegExp.prototype;\n\nvar $RegExpStringIterator = function (regexp, string) {\n  this._r = regexp;\n  this._s = string;\n};\n\nrequire('./_iter-create')($RegExpStringIterator, 'RegExp String', function next() {\n  var match = this._r.exec(this._s);\n  return { value: match, done: match === null };\n});\n\n$export($export.P, 'String', {\n  matchAll: function matchAll(regexp) {\n    defined(this);\n    if (!isRegExp(regexp)) throw TypeError(regexp + ' is not a regexp!');\n    var S = String(this);\n    var flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp);\n    var rx = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);\n    rx.lastIndex = toLength(regexp.lastIndex);\n    return new $RegExpStringIterator(rx, S);\n  }\n});\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_defined","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_is_regexp","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_iter_create","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_to_length","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_export","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_flags","~$shadow.js"]],"~:properties",["^5",["lastIndex","value","_r","_s","matchAll","done"]],"~:compiled-at",1666267695859,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$babel_polyfill$node_modules$core_js$modules$es7_string_match_all.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,oFAAA,CAAyG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG7IC,MAAAA,CAAUH,OAAA,CAAQ,yEAAR,CACd,KAAII,QAAUJ,OAAA,CAAQ,0EAAR,CAAd,CACIK,SAAWL,OAAA,CAAQ,4EAAR,CADf,CAEIM,SAAWN,OAAA,CAAQ,4EAAR,CAFf;AAGIO,SAAWP,OAAA,CAAQ,wEAAR,CAHf,CAIIQ,YAAcC,MAAOC,CAAAA,SAJzB,CAMIC,sBAAwBA,QAAS,CAACC,MAAD,CAASC,MAAT,CAAiB,CACpD,IAAKC,CAAAA,EAAL,CAAUF,MACV,KAAKG,CAAAA,EAAL,CAAUF,MAF0C,CAKtDb,QAAA,CAAQ,8EAAR,CAAA,CAA0BW,qBAA1B,CAAiD,eAAjD,CAAkEK,QAAa,EAAG,CAChF,IAAIC,MAAQ,IAAKH,CAAAA,EAAGI,CAAAA,IAAR,CAAa,IAAKH,CAAAA,EAAlB,CACZ,OAAO,CAAEI,MAAOF,KAAT,CAAgBG,KAAgB,IAAhBA,GAAMH,KAAtB,CAFyE,CAAlF,CAKAd,OAAA,CAAQA,MAAQkB,CAAAA,CAAhB,CAAmB,QAAnB,CAA6B,CAC3BC,SAAUA,QAAiB,CAACV,MAAD,CAAS,CAClCR,OAAA,CAAQ,IAAR,CACA,IAAI,CAACE,QAAA,CAASM,MAAT,CAAL,CAAuB,KAAMW,UAAA,CAAUX,MAAV;AAAmB,mBAAnB,CAAN,CACvB,IAAIY,EAAIC,MAAA,CAAO,IAAP,CAAR,CACIC,MAAQ,OAAA,EAAWlB,YAAX,CAAyBiB,MAAA,CAAOb,MAAOc,CAAAA,KAAd,CAAzB,CAAgDnB,QAASoB,CAAAA,IAAT,CAAcf,MAAd,CACxDgB,MAAAA,CAAK,IAAInB,MAAJ,CAAWG,MAAOiB,CAAAA,MAAlB,CAA0B,CAACH,KAAMI,CAAAA,OAAN,CAAc,GAAd,CAAD,CAAsBJ,KAAtB,CAA8B,GAA9B,CAAoCA,KAA9D,CACTE,MAAGG,CAAAA,SAAH,CAAe1B,QAAA,CAASO,MAAOmB,CAAAA,SAAhB,CACf,OAAO,KAAIpB,qBAAJ,CAA0BiB,KAA1B,CAA8BJ,CAA9B,CAP2B,CADT,CAA7B,CApBiJ;\",\n\"sources\":[\"node_modules/babel-polyfill/node_modules/core-js/modules/es7.string.match-all.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$babel_polyfill$node_modules$core_js$modules$es7_string_match_all\\\"] = function(global,require,module,exports) {\\n'use strict';\\n// https://tc39.github.io/String.prototype.matchAll/\\nvar $export = require('./_export');\\nvar defined = require('./_defined');\\nvar toLength = require('./_to-length');\\nvar isRegExp = require('./_is-regexp');\\nvar getFlags = require('./_flags');\\nvar RegExpProto = RegExp.prototype;\\n\\nvar $RegExpStringIterator = function (regexp, string) {\\n  this._r = regexp;\\n  this._s = string;\\n};\\n\\nrequire('./_iter-create')($RegExpStringIterator, 'RegExp String', function next() {\\n  var match = this._r.exec(this._s);\\n  return { value: match, done: match === null };\\n});\\n\\n$export($export.P, 'String', {\\n  matchAll: function matchAll(regexp) {\\n    defined(this);\\n    if (!isRegExp(regexp)) throw TypeError(regexp + ' is not a regexp!');\\n    var S = String(this);\\n    var flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp);\\n    var rx = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);\\n    rx.lastIndex = toLength(regexp.lastIndex);\\n    return new $RegExpStringIterator(rx, S);\\n  }\\n});\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"$export\",\"defined\",\"toLength\",\"isRegExp\",\"getFlags\",\"RegExpProto\",\"RegExp\",\"prototype\",\"$RegExpStringIterator\",\"regexp\",\"string\",\"_r\",\"_s\",\"next\",\"match\",\"exec\",\"value\",\"done\",\"P\",\"matchAll\",\"TypeError\",\"S\",\"String\",\"flags\",\"call\",\"rx\",\"source\",\"indexOf\",\"lastIndex\"]\n}\n"]
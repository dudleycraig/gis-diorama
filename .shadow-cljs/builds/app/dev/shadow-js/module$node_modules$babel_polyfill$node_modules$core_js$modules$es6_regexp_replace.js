["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/babel-polyfill/node_modules/core-js/modules/es6.regexp.replace.js"],"~:js","shadow$provide.module$node_modules$babel_polyfill$node_modules$core_js$modules$es6_regexp_replace=function(global$jscomp$0,require,module,exports){var anObject=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_an_object\"),toObject=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_to_object\"),toLength=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_to_length\"),toInteger=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_to_integer\"),\nadvanceStringIndex=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_advance_string_index\"),regExpExec=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_regexp_exec_abstract\"),max=Math.max,min=Math.min,floor=Math.floor,SUBSTITUTION_SYMBOLS=/\\$([$&`']|\\d\\d?|<[^>]*>)/g,SUBSTITUTION_SYMBOLS_NO_NAMED=/\\$([$&`']|\\d\\d?)/g;require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_fix_re_wks\")(\"replace\",2,function(defined,REPLACE,$replace,maybeCallNative){function getSubstitution(matched,\nstr,position,captures,namedCaptures,replacement){var tailPos=position+matched.length,m=captures.length,symbols=SUBSTITUTION_SYMBOLS_NO_NAMED;void 0!==namedCaptures&&(namedCaptures=toObject(namedCaptures),symbols=SUBSTITUTION_SYMBOLS);return $replace.call(replacement,symbols,function(match,ch){switch(ch.charAt(0)){case \"$\":return\"$\";case \"\\x26\":return matched;case \"`\":return str.slice(0,position);case \"'\":return str.slice(tailPos);case \"\\x3c\":match=namedCaptures[ch.slice(1,-1)];break;default:var n=\n+ch;if(0===n)return match;if(n>m)return n=floor(n/10),0===n?match:n<=m?void 0===captures[n-1]?ch.charAt(1):captures[n-1]+ch.charAt(1):match;match=captures[n-1]}return void 0===match?\"\":match})}return[function(searchValue,replaceValue){var O=defined(this),fn=void 0==searchValue?void 0:searchValue[REPLACE];return void 0!==fn?fn.call(searchValue,O,replaceValue):$replace.call(String(O),searchValue,replaceValue)},function(regexp,replaceValue){var res=maybeCallNative($replace,regexp,this,replaceValue);\nif(res.done)return res.value;var rx=anObject(regexp);regexp=String(this);(res=\"function\"===typeof replaceValue)||(replaceValue=String(replaceValue));var global=rx.global;if(global){var fullUnicode=rx.unicode;rx.lastIndex=0}for(var results=[];;){var result=regExpExec(rx,regexp);if(null===result)break;results.push(result);if(!global)break;\"\"===String(result[0])&&(rx.lastIndex=advanceStringIndex(regexp,toLength(rx.lastIndex),fullUnicode))}fullUnicode=\"\";for(global=rx=0;global<results.length;global++){result=\nresults[global];for(var matched=String(result[0]),position=max(min(toInteger(result.index),regexp.length),0),captures=[],j=1;j<result.length;j++){var JSCompiler_temp_const=captures,it=result[j];JSCompiler_temp_const.push.call(JSCompiler_temp_const,void 0===it?it:String(it))}result=result.groups;res?(captures=[matched].concat(captures,position,regexp),void 0!==result&&captures.push(result),result=String(replaceValue.apply(void 0,captures))):result=getSubstitution(matched,regexp,position,captures,result,\nreplaceValue);position>=rx&&(fullUnicode+=regexp.slice(rx,position)+result,rx=position+matched.length)}return fullUnicode+regexp.slice(rx)}]})}","~:source","shadow$provide[\"module$node_modules$babel_polyfill$node_modules$core_js$modules$es6_regexp_replace\"] = function(global,require,module,exports) {\n'use strict';\n\nvar anObject = require('./_an-object');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar toInteger = require('./_to-integer');\nvar advanceStringIndex = require('./_advance-string-index');\nvar regExpExec = require('./_regexp-exec-abstract');\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&`']|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&`']|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nrequire('./_fix-re-wks')('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = defined(this);\n      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return fn !== undefined\n        ? fn.call(searchValue, O, replaceValue)\n        : $replace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      var res = maybeCallNative($replace, regexp, this, replaceValue);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n        results.push(result);\n        if (!global) break;\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n    // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return $replace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_regexp_exec_abstract","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_to_length","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_an_object","~$shadow.js","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_to_object","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_fix_re_wks","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_advance_string_index","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_to_integer"]],"~:properties",["^5",["lastIndex"]],"~:compiled-at",1666267695846,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$babel_polyfill$node_modules$core_js$modules$es6_regexp_replace.js\",\n\"lineCount\":7,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/babel-polyfill/node_modules/core-js/modules/es6.regexp.replace.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$babel_polyfill$node_modules$core_js$modules$es6_regexp_replace\\\"] = function(global,require,module,exports) {\\n'use strict';\\n\\nvar anObject = require('./_an-object');\\nvar toObject = require('./_to-object');\\nvar toLength = require('./_to-length');\\nvar toInteger = require('./_to-integer');\\nvar advanceStringIndex = require('./_advance-string-index');\\nvar regExpExec = require('./_regexp-exec-abstract');\\nvar max = Math.max;\\nvar min = Math.min;\\nvar floor = Math.floor;\\nvar SUBSTITUTION_SYMBOLS = /\\\\$([$&`']|\\\\d\\\\d?|<[^>]*>)/g;\\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\\\$([$&`']|\\\\d\\\\d?)/g;\\n\\nvar maybeToString = function (it) {\\n  return it === undefined ? it : String(it);\\n};\\n\\n// @@replace logic\\nrequire('./_fix-re-wks')('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {\\n  return [\\n    // `String.prototype.replace` method\\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\\n    function replace(searchValue, replaceValue) {\\n      var O = defined(this);\\n      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];\\n      return fn !== undefined\\n        ? fn.call(searchValue, O, replaceValue)\\n        : $replace.call(String(O), searchValue, replaceValue);\\n    },\\n    // `RegExp.prototype[@@replace]` method\\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\\n    function (regexp, replaceValue) {\\n      var res = maybeCallNative($replace, regexp, this, replaceValue);\\n      if (res.done) return res.value;\\n\\n      var rx = anObject(regexp);\\n      var S = String(this);\\n      var functionalReplace = typeof replaceValue === 'function';\\n      if (!functionalReplace) replaceValue = String(replaceValue);\\n      var global = rx.global;\\n      if (global) {\\n        var fullUnicode = rx.unicode;\\n        rx.lastIndex = 0;\\n      }\\n      var results = [];\\n      while (true) {\\n        var result = regExpExec(rx, S);\\n        if (result === null) break;\\n        results.push(result);\\n        if (!global) break;\\n        var matchStr = String(result[0]);\\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\\n      }\\n      var accumulatedResult = '';\\n      var nextSourcePosition = 0;\\n      for (var i = 0; i < results.length; i++) {\\n        result = results[i];\\n        var matched = String(result[0]);\\n        var position = max(min(toInteger(result.index), S.length), 0);\\n        var captures = [];\\n        // NOTE: This is equivalent to\\n        //   captures = result.slice(1).map(maybeToString)\\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\\n        // the slice polyfill when slicing native arrays) \\\"doesn't work\\\" in safari 9 and\\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\\n        var namedCaptures = result.groups;\\n        if (functionalReplace) {\\n          var replacerArgs = [matched].concat(captures, position, S);\\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\\n        } else {\\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\\n        }\\n        if (position >= nextSourcePosition) {\\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\\n          nextSourcePosition = position + matched.length;\\n        }\\n      }\\n      return accumulatedResult + S.slice(nextSourcePosition);\\n    }\\n  ];\\n\\n    // https://tc39.github.io/ecma262/#sec-getsubstitution\\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\\n    var tailPos = position + matched.length;\\n    var m = captures.length;\\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\\n    if (namedCaptures !== undefined) {\\n      namedCaptures = toObject(namedCaptures);\\n      symbols = SUBSTITUTION_SYMBOLS;\\n    }\\n    return $replace.call(replacement, symbols, function (match, ch) {\\n      var capture;\\n      switch (ch.charAt(0)) {\\n        case '$': return '$';\\n        case '&': return matched;\\n        case '`': return str.slice(0, position);\\n        case \\\"'\\\": return str.slice(tailPos);\\n        case '<':\\n          capture = namedCaptures[ch.slice(1, -1)];\\n          break;\\n        default: // \\\\d\\\\d?\\n          var n = +ch;\\n          if (n === 0) return match;\\n          if (n > m) {\\n            var f = floor(n / 10);\\n            if (f === 0) return match;\\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\\n            return match;\\n          }\\n          capture = captures[n - 1];\\n      }\\n      return capture === undefined ? '' : capture;\\n    });\\n  }\\n});\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"anObject\",\"toObject\",\"toLength\",\"toInteger\",\"advanceStringIndex\",\"regExpExec\",\"max\",\"Math\",\"min\",\"floor\",\"SUBSTITUTION_SYMBOLS\",\"SUBSTITUTION_SYMBOLS_NO_NAMED\",\"defined\",\"REPLACE\",\"$replace\",\"maybeCallNative\",\"getSubstitution\",\"matched\",\"str\",\"position\",\"captures\",\"namedCaptures\",\"replacement\",\"tailPos\",\"length\",\"m\",\"symbols\",\"undefined\",\"call\",\"match\",\"ch\",\"charAt\",\"slice\",\"capture\",\"n\",\"f\",\"replace\",\"searchValue\",\"replaceValue\",\"O\",\"fn\",\"String\",\"regexp\",\"res\",\"done\",\"value\",\"rx\",\"S\",\"functionalReplace\",\"fullUnicode\",\"unicode\",\"lastIndex\",\"results\",\"result\",\"push\",\"matchStr\",\"accumulatedResult\",\"i\",\"nextSourcePosition\",\"index\",\"j\",\"it\",\"groups\",\"replacerArgs\",\"concat\",\"apply\"]\n}\n"]
["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/babel-polyfill/node_modules/core-js/modules/_string-context.js"],"~:js","shadow$provide.module$node_modules$babel_polyfill$node_modules$core_js$modules$_string_context=function(global,require,module,exports){var isRegExp=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_is_regexp\"),defined=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_defined\");module.exports=function(that,searchString,NAME){if(isRegExp(searchString))throw TypeError(\"String#\"+NAME+\" doesn't accept regex!\");return String(defined(that))}}","~:source","shadow$provide[\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_string_context\"] = function(global,require,module,exports) {\n// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_defined","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_is_regexp","~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1666267695826,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_string_context.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,+EAAA,CAAoG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE5I,IAAIC,SAAWH,OAAA,CAAQ,4EAAR,CAAf,CACII,QAAUJ,OAAA,CAAQ,0EAAR,CAEdC,OAAOC,CAAAA,OAAP,CAAiBG,QAAS,CAACC,IAAD,CAAOC,YAAP,CAAqBC,IAArB,CAA2B,CACnD,GAAIL,QAAA,CAASI,YAAT,CAAJ,CAA4B,KAAME,UAAA,CAAU,SAAV,CAAsBD,IAAtB,CAA6B,wBAA7B,CAAN,CAC5B,MAAOE,OAAA,CAAON,OAAA,CAAQE,IAAR,CAAP,CAF4C,CALuF;\",\n\"sources\":[\"node_modules/babel-polyfill/node_modules/core-js/modules/_string-context.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_string_context\\\"] = function(global,require,module,exports) {\\n// helper for String#{startsWith, endsWith, includes}\\nvar isRegExp = require('./_is-regexp');\\nvar defined = require('./_defined');\\n\\nmodule.exports = function (that, searchString, NAME) {\\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \\\" doesn't accept regex!\\\");\\n  return String(defined(that));\\n};\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"isRegExp\",\"defined\",\"module.exports\",\"that\",\"searchString\",\"NAME\",\"TypeError\",\"String\"]\n}\n"]
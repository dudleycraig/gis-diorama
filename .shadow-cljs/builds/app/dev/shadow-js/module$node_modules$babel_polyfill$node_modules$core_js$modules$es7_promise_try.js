["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/babel-polyfill/node_modules/core-js/modules/es7.promise.try.js"],"~:js","shadow$provide.module$node_modules$babel_polyfill$node_modules$core_js$modules$es7_promise_try=function(global,require,module,exports){global=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_export\");var newPromiseCapability=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_new_promise_capability\"),perform=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_perform\");global(global.S,\"Promise\",{\"try\":function(callbackfn){var promiseCapability=\nnewPromiseCapability.f(this);callbackfn=perform(callbackfn);(callbackfn.e?promiseCapability.reject:promiseCapability.resolve)(callbackfn.v);return promiseCapability.promise}})}","~:source","shadow$provide[\"module$node_modules$babel_polyfill$node_modules$core_js$modules$es7_promise_try\"] = function(global,require,module,exports) {\n'use strict';\n// https://github.com/tc39/proposal-promise-try\nvar $export = require('./_export');\nvar newPromiseCapability = require('./_new-promise-capability');\nvar perform = require('./_perform');\n\n$export($export.S, 'Promise', { 'try': function (callbackfn) {\n  var promiseCapability = newPromiseCapability.f(this);\n  var result = perform(callbackfn);\n  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n  return promiseCapability.promise;\n} });\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_perform","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_export","~$shadow.js","~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_new_promise_capability"]],"~:properties",["^5",[]],"~:compiled-at",1666267695863,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$babel_polyfill$node_modules$core_js$modules$es7_promise_try.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,+EAAA,CAAoG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGxIC,MAAAA,CAAUH,OAAA,CAAQ,yEAAR,CACd,KAAII,qBAAuBJ,OAAA,CAAQ,yFAAR,CAA3B,CACIK,QAAUL,OAAA,CAAQ,0EAAR,CAEdG,OAAA,CAAQA,MAAQG,CAAAA,CAAhB,CAAmB,SAAnB,CAA8B,CAAE,MAAOC,QAAS,CAACC,UAAD,CAAa,CAC3D,IAAIC;AAAoBL,oBAAqBM,CAAAA,CAArB,CAAuB,IAAvB,CACpBC,WAAAA,CAASN,OAAA,CAAQG,UAAR,CACb,EAACG,UAAOC,CAAAA,CAAP,CAAWH,iBAAkBI,CAAAA,MAA7B,CAAsCJ,iBAAkBK,CAAAA,OAAzD,EAAkEH,UAAOI,CAAAA,CAAzE,CACA,OAAON,kBAAkBO,CAAAA,OAJkC,CAA/B,CAA9B,CAP4I;\",\n\"sources\":[\"node_modules/babel-polyfill/node_modules/core-js/modules/es7.promise.try.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$babel_polyfill$node_modules$core_js$modules$es7_promise_try\\\"] = function(global,require,module,exports) {\\n'use strict';\\n// https://github.com/tc39/proposal-promise-try\\nvar $export = require('./_export');\\nvar newPromiseCapability = require('./_new-promise-capability');\\nvar perform = require('./_perform');\\n\\n$export($export.S, 'Promise', { 'try': function (callbackfn) {\\n  var promiseCapability = newPromiseCapability.f(this);\\n  var result = perform(callbackfn);\\n  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\\n  return promiseCapability.promise;\\n} });\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"$export\",\"newPromiseCapability\",\"perform\",\"S\",\"try\",\"callbackfn\",\"promiseCapability\",\"f\",\"result\",\"e\",\"reject\",\"resolve\",\"v\",\"promise\"]\n}\n"]
["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/babel-polyfill/node_modules/core-js/modules/es6.math.hypot.js"],"~:js","shadow$provide.module$node_modules$babel_polyfill$node_modules$core_js$modules$es6_math_hypot=function(global,require,module,exports){global=require(\"module$node_modules$babel_polyfill$node_modules$core_js$modules$_export\");var abs=Math.abs;global(global.S,\"Math\",{hypot:function(value1,value2){for(var sum=0,i=0,aLen=arguments.length,larg=0,arg,div;i<aLen;)arg=abs(arguments[i++]),larg<arg?(div=larg/arg,sum=sum*div*div+1,larg=arg):0<arg?(div=arg/larg,sum+=div*div):sum+=arg;return Infinity===larg?Infinity:\nlarg*Math.sqrt(sum)}})}","~:source","shadow$provide[\"module$node_modules$babel_polyfill$node_modules$core_js$modules$es6_math_hypot\"] = function(global,require,module,exports) {\n// 20.2.2.17 Math.hypot([value1[, value2[, â€¦ ]]])\nvar $export = require('./_export');\nvar abs = Math.abs;\n\n$export($export.S, 'Math', {\n  hypot: function hypot(value1, value2) { // eslint-disable-line no-unused-vars\n    var sum = 0;\n    var i = 0;\n    var aLen = arguments.length;\n    var larg = 0;\n    var arg, div;\n    while (i < aLen) {\n      arg = abs(arguments[i++]);\n      if (larg < arg) {\n        div = larg / arg;\n        sum = sum * div * div + 1;\n        larg = arg;\n      } else if (arg > 0) {\n        div = arg / larg;\n        sum += div * div;\n      } else sum += arg;\n    }\n    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);\n  }\n});\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$babel_polyfill$node_modules$core_js$modules$_export","~$shadow.js"]],"~:properties",["^5",["hypot"]],"~:compiled-at",1666267695823,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$babel_polyfill$node_modules$core_js$modules$es6_math_hypot.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,8EAAA,CAAmG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEvIC,MAAAA,CAAUH,OAAA,CAAQ,yEAAR,CACd,KAAII,IAAMC,IAAKD,CAAAA,GAEfD,OAAA,CAAQA,MAAQG,CAAAA,CAAhB,CAAmB,MAAnB,CAA2B,CACzBC,MAAOA,QAAc,CAACC,MAAD,CAASC,MAAT,CAAiB,CAMpC,IALA,IAAIC,IAAM,CAAV,CACIC,EAAI,CADR,CAEIC,KAAOC,SAAUC,CAAAA,MAFrB,CAGIC,KAAO,CAHX,CAIIC,GAJJ,CAISC,GACT,CAAON,CAAP,CAAWC,IAAX,CAAA,CACEI,GACA,CADMZ,GAAA,CAAIS,SAAA,CAAUF,CAAA,EAAV,CAAJ,CACN,CAAII,IAAJ,CAAWC,GAAX,EACEC,GAEA,CAFMF,IAEN,CAFaC,GAEb,CADAN,GACA,CADMA,GACN,CADYO,GACZ,CADkBA,GAClB,CADwB,CACxB,CAAAF,IAAA,CAAOC,GAHT,EAIiB,CAAV,CAAIA,GAAJ,EACLC,GACA,CADMD,GACN,CADYD,IACZ,CAAAL,GAAA,EAAOO,GAAP,CAAaA,GAFR,EAGAP,GAHA,EAGOM,GAEhB,OAAgBE,SAAT,GAAAH,IAAA,CAAoBG,QAApB;AAA+BH,IAA/B,CAAsCV,IAAKc,CAAAA,IAAL,CAAUT,GAAV,CAjBT,CADb,CAA3B,CAL2I;\",\n\"sources\":[\"node_modules/babel-polyfill/node_modules/core-js/modules/es6.math.hypot.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$babel_polyfill$node_modules$core_js$modules$es6_math_hypot\\\"] = function(global,require,module,exports) {\\n// 20.2.2.17 Math.hypot([value1[, value2[, \\u2026 ]]])\\nvar $export = require('./_export');\\nvar abs = Math.abs;\\n\\n$export($export.S, 'Math', {\\n  hypot: function hypot(value1, value2) { // eslint-disable-line no-unused-vars\\n    var sum = 0;\\n    var i = 0;\\n    var aLen = arguments.length;\\n    var larg = 0;\\n    var arg, div;\\n    while (i < aLen) {\\n      arg = abs(arguments[i++]);\\n      if (larg < arg) {\\n        div = larg / arg;\\n        sum = sum * div * div + 1;\\n        larg = arg;\\n      } else if (arg > 0) {\\n        div = arg / larg;\\n        sum += div * div;\\n      } else sum += arg;\\n    }\\n    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);\\n  }\\n});\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"$export\",\"abs\",\"Math\",\"S\",\"hypot\",\"value1\",\"value2\",\"sum\",\"i\",\"aLen\",\"arguments\",\"length\",\"larg\",\"arg\",\"div\",\"Infinity\",\"sqrt\"]\n}\n"]